---
title: "Class 9: Halloween Candy Project"
author: "Yiyu"
format: pdf
toc: TRUE
---
## Background

Today we are delving into an analysis of Halloween Candy data using ggplot, dpylr, basic stats, correlation analysis, and our old friend PCA.

## 1. Import the data
```{r import}
candy <-read.csv("candy-data.txt", row.names = 1)
head(candy)

```
> Q1. How many candy types are in this dataset?

```{r}
nrow(candy)
```
> Q2. How many fruity candy types are in this dataset?

```{r}
sum(candy$fruity)
```
> Q. How many chocolate candy types are in this dataset?

```{r}
sum(candy$chocolate)
```
## 2. What is your favorite candy?

>Q3. What is your favorite type, what is it's winpercent value?

```{r}
candy["Twix",]$winpercent
```
```{r}
#| message: false
library(dplyr)
```

We can also use the `filter()` and `select()` functions from **dplyr** 

```{r}
candy |>
  filter(rownames(candy) == "Haribo Happy Cola") |>
  select(winpercent, sugarpercent)
```
> Q4. What is the winpercent value for “Kit Kat”?
> Q5. What is the winpercent value for “Tootsie Roll Snack Bars”?

```{r}
candy |>
  filter(rownames(candy) == "Kit Kat") |>
  select(winpercent, sugarpercent)

```
```{r}
candy |>
  filter(rownames(candy) == "Tootsie Roll Snack Bars") |>
  select(winpercent, sugarpercent)

```

A useful function for a quick look at a new dataset is found in the **skimr** package.
```{r}
library(skimr)
skim(candy)
```

> Q6. Is there any variable/column that looks to be on a different scale to the majority of the other columns in the dataset?

Yes, the `winpercent` column is on a different "scale" or range than all others.

**N.B** We will need to scale this data before analysis like PCA for example to avoid this one variable from dominating our analysis.

> Q7. What do you think a zero and one represent for the candy$chocolate column?

The candy does not have chocolate if candy$chocolate = 0

>Q8. Plot a histogram of winpercent values using base R and ggplot.

```{r}
hist(candy$winpercent)
```
```{r}
library(ggplot2)
ggplot(candy, aes(winpercent)) +
  geom_histogram(bins = 10, fill = "violet")
```
> Q9. Is the distribution of winpercent values symmetrical?

No

> Q10. Is the center of the distribution above or below 50%?

From the histogram, it looks to be below 50%. Can use the `summary()` function to get quantitative value.

```{r}
summary(candy$winpercent)
```
Mean is slightly above, median is below 50%.

> Q11. On average is chocolate candy higher or lower ranked than fruit candy?

Step 1. Find/Extract chocolate candy rows in the dataset.
Step 2. Get their `winpercent` values
Step 3. Calculate their mean `winpercent` values.

Step 4. Find/extract fruity candy rows in the data set.
Step 5. Get their `winpercent` values
Step 6. Calculate their mean `winpercent` values

Step 7. Compare mean chocolate `winpercent` to mean fruity `winpercent` and see which one is larger.

1. Find chocolate candy
```{r}
choc.inds <- candy$chocolate == 1
choc.candy <- candy[choc.inds,]
choc.candy
```

2. Get their winpercent values

```{r}
choc.win <- choc.candy$winpercent
choc.win
```
3. Calculate their mean winpercent

```{r}
mean(choc.win)
```

4-6. Repeat for fruity candy.
```{r}
fruity.inds <- candy$fruity == 1
fruity.candy <- candy[fruity.inds,]
fruity.win <- fruity.candy$winpercent
mean(fruity.win)
```
7. Compare mean chocolate `winpercent` to mean fruity `winpercent` and see which one is larger.

```{r}
mean(choc.win) > mean(fruity.win)
```

> Q12. Is this difference statistically significant?

Let's use a t-test

```{r}
t.test(choc.win, fruity.win)
```
Yes

## 3. Overall Candy Ratings
> Q13. What are the five least liked candy types in this set? Use base R and dplyr.

```{r}
x <- c(10, 1, 100)
sort(x)
```
```{r}
order(x)
```
So I can use the output of `order(winpercent)` to re-arrange (or order) my whole dataset by `winpercent`

```{r}
ord.inds <- order(candy$winpercent)
head(candy[ord.inds,], n=5)
```
```{r}
candy |>
  arrange(winpercent) |>
  head(n=5)
```

> Q14. What are the top 5 all time favorite candy types out of this set?

```{r}
candy |>
  arrange(-(winpercent)) |>
  head(n=5)
```


> Q15. Make a first barplot of candy ranking based on winpercent values.

```{r}
ggplot(candy) + 
  aes(winpercent, rownames(candy) ) +
  geom_col()
```

> Q16. This is quite ugly, use the reorder() function to get the bars sorted by winpercent?

We can make the above plot better by rearrange (with the `reoder()` function) the y-axis by winpercent so the highest scoring candy is at the top and lowest at the bottom.

```{r}
p <- ggplot(candy) + 
  aes(winpercent, reorder(rownames(candy), winpercent) ) +
  geom_col() +
  ylab("") +
  xlab("Win Percent")
```

```{r}
ggsave("my_plot.png", height=12, width=6)
```

![Larger plot for better viewing](my_plot.png)

> Q. Color your bars by "chocolate"

```{r}
ggplot(candy) + 
  aes(winpercent, reorder(rownames(candy), winpercent) ) +
  geom_col(aes(fill = chocolate)) +
  ylab("") +
  xlab("Win Percent")
```

Not exactly what I want (gradient doesn't make sense). What if I want to color chocolate and fruity a specified color? To do this we need to define our own custom color vector that has the exact color mappings we want.

```{r}
mycols <- rep("black", nrow(candy))
mycols[candy$chocolate == 1] <- "chocolate"
mycols[candy$bar == 1] <- "brown"
mycols[candy$fruity == 1] <- "pink"
```

```{r}
ggplot(candy) + 
  aes(winpercent, reorder(rownames(candy), winpercent) ) +
  geom_col(fill = mycols) +
  ylab("") +
  xlab("Win Percent")
```
```{r}
ggsave("my_color_plot.png", height=12, width=6)
```

![Larger colored plot for better viewing](my_color_plot.png)
> Q17. What is the worst ranked chocolate candy?

Sixlets

> Q18. What is the best ranked fruity candy?

Starburst

## 4. Taking a look at pricepercent
Plot of winpercent vs pricepercent

```{r}
ggplot(candy) +
  aes(x=winpercent, 
      y=pricepercent, 
      label = rownames(candy)) +
  geom_point(color = mycols) +
  geom_text(col = mycols) +
  theme_bw()
```
To avoid the common problem of label or text over-plotting, we can use the **ggrepel** package like so:

```{r}
library(ggrepel)
ggplot(candy) +
  aes(x=winpercent, 
      y=pricepercent, 
      label = rownames(candy)) +
  geom_point(color = mycols) +
  geom_text_repel(col = mycols) + 
  theme_bw()
```
We can control the amount of labels visible by setting different `max.overlaps` values:

```{r}
#Change pink to be red for fruity candy for better visibility
mycols[candy$fruity == 1] <- "red"

ggplot(candy) +
  aes(x=winpercent, 
      y=pricepercent, 
      label = rownames(candy)) +
  geom_point(color = mycols) +
  geom_text_repel(col = mycols, max.overlaps = 8) + 
  theme_bw()
```
> Q19. Which candy type is the highest ranked in terms of winpercent for the least money - i.e. offers the most bang for your buck?

Reese's Miniatures

> Q20. What are the top 5 most expensive candy types in the dataset and of these which is the least popular? 

Some points too close to tell top 5, so used dyplr code to confirm 5 most expensive.

```{r}
candy |>
  arrange(-(pricepercent)) |>
  head(n=5)
```

Nik L Nip, Ring Pop, Nestles Smarties, Hershey's Krackel, Hershey's Milk Chocolate
Least popular is Nik L Nip

## 5. Exploring the correlation structure

The main function for correlation analysis in base R is called `cor()`

```{r}
cij <- cor(candy)
head(cij)
```

```{r}
library(corrplot)

corrplot(cij)
```
> Q22. Examining this plot what two variables are anti-correlated (i.e. have minus values)?

Fruity and Chocolate candies

> Q23. Similarly, what two variables are most positively correlated?

Chocolate and winpercent, chocolate and bar

## 6. Principal Component Analysis (PCA)

We can use our old friend `prcomp()` function with `scale = TRUE`(recall winpercent was on a different scale. need to set scale to true so it doesn't bias the analysis)

```{r}
pca <- prcomp(candy, scale = TRUE)
```

Let's make our main results figures, first our score plot (PC Plot)

```{r}
ggplot(pca$x) +
  aes(PC1, PC2, label = rownames(candy)) +
  geom_point(col = mycols) +
  geom_text_repel(col = mycols, max.overlaps = 8)
```
Let's look at how the original variables contribute to our new PCs - this is often called the variable "loadings" or contributions:

```{r}
ggplot(pca$rotation) +
  aes(x=PC1, 
      y=reorder(rownames(pca$rotation), PC1)) +
  geom_col()
```
> Q24. What original variables are picked up strongly by PC1 in the positive direction? Do these make sense to you?

Fruity, hard, pluribus. Yes they make sense because fruity candy tend to come as hard candies and in multiples (such as skittles)
