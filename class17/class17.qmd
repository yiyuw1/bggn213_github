---
title: "Class17: Cloud SRA data analysis"
author: "Yiyu"
format: pdf
---

# Downstream Analysis
```{r}
folders <- list.files(pattern = "SRR")
files <- paste0(folders, "/abundance.h5")
files
```

```{r}
file.exists(files)
```

```{r}
names(files) <- sub(pattern = "_quant", "", folders)
files
```

Load up the tximport package and import data
```{r}
library(tximport)
txi.kallisto <- tximport(files, type = "kallisto", txOut = TRUE)
```

# Remove zero count genes

remove transcripts with no reads
```{r}
to.keep <- rowSums(txi.kallisto$counts) > 0
kset.nonzero <- txi.kallisto$counts[to.keep,]
```

remove transcripts with no change over samples
```{r}
keep2 <- apply(kset.nonzero,1,sd)>0
x <- kset.nonzero[keep2,]
```

# TRY a PCA

```{r}
pca <- prcomp(t(x), scale=TRUE)
```

```{r}
summary(pca)
```

```{r}
plot(pca$x[,1], pca$x[,2],
     col=c("blue","blue","red","red"),
     xlab="PC1", ylab="PC2", pch=16)
```
or use ggplot to plot pca results

```{r}
library(ggplot2)
library(ggrepel)

colData <- data.frame(condition = factor(rep(c("control", "treatment"), each = 2)))
rownames(colData) <- colnames(txi.kallisto$counts)

y <- as.data.frame(pca$x)
y$Condition <- as.factor(colData$condition)

ggplot(y) + 
  aes(PC1, PC2, col = Condition) +
  geom_point() +
  geom_text_repel(label=rownames(y)) +
  labs(title = "PC1 vs PC2") +
  theme_bw()
```

```{r}
ggplot(y) + 
  aes(PC1, PC3, col = Condition) +
  geom_point() +
  geom_text_repel(label=rownames(y)) +
  labs(title = "PC1 vs PC3") +
  theme_bw()
```

```{r}
ggplot(y) + 
  aes(PC2, PC3, col = Condition) +
  geom_point() +
  geom_text_repel(label=rownames(y)) +
  labs(title = "PC2 vs PC3") +
  theme_bw()
```

# DESeq

```{r}
library(DESeq2)
```

```{r}
sampleTable <- data.frame(condition = factor(rep(c("control", "treatment"), each = 2)))
rownames(sampleTable) <- colnames(txi.kallisto$counts)
```

```{r}
dds <- DESeqDataSetFromTximport(txi.kallisto,
                                sampleTable, 
                                ~condition)
```

```{r}
dds <- DESeq(dds)

res <- results(dds)

head(res)
```

